<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Roobyz Ramblings]]></title><description><![CDATA[A responsive site for sharing thoughts and lessons learned on data science, programming, and technology.]]></description><link>https://roobyz.github.io</link><image><url>/images/background.jpg</url><title>Roobyz Ramblings</title><link>https://roobyz.github.io</link></image><generator>RSS for Node</generator><lastBuildDate>Tue, 25 Apr 2017 04:08:10 GMT</lastBuildDate><atom:link href="https://roobyz.github.io/rss/" rel="self" type="application/rss+xml"/><ttl>60</ttl><item><title><![CDATA[Proxmox VE: Virtualization for Work and Play (The Plan)]]></title><description><![CDATA[<div id="preamble">
<div class="sectionbody">
<div id="toc" class="toc">
<div id="toctitle" class="title">Table of Contents</div>
<ul class="sectlevel1">
<li><a href="#_introduction">Introduction</a></li>
<li><a href="#_hardware_considerations">Hardware Considerations</a></li>
<li><a href="#_software_considerations">Software Considerations</a></li>
<li><a href="#_next_steps">Next Steps&#8230;&#8203;</a></li>
</ul>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_introduction">Introduction</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Say we want a powerful "bang for the buck" home server for games <em>and</em> other system-intensive pursuits. We may want to run powerful analytics applications which would undoubtedly require Linux, but we may also want to run Windows applications. We may want near native 2D and 3D graphics performance inside the guest operating system (OS) while making dual-booting obsolete. Finally, we may want to do all of that from the comfort of our couch using a Windows, Linux or Mac laptop.</p>
</div>
<div class="paragraph">
<p>With the <a href="https://opensource.org/">open source</a> server management solution, <a href="https://www.proxmox.com/en/">Proxmox Virtual Environment (PVE)</a>, we can achieve these goals. PVE enables the creation of multiple virtual OS "servers" via a Web GUI; as many as our hardware setup will allow. This guide will document the setup of Proxmox on the following hardware:</p>
</div>
<div class="ulist">
<ul>
<li>
<p>AMD Ryzen 7 1600 (8 cores, 16 threads @ 3.7GHz)</p>
</li>
<li>
<p>64GB 2400MHz DDR4</p>
</li>
<li>
<p>Boot Drive: 1x 512GB NVMe SSD</p>
</li>
<li>
<p>Storage (Striped-mirrored ZFS):</p>
<div class="ulist">
<ul>
<li>
<p>2x 1TB SATA SSD (striped)</p>
</li>
<li>
<p>1x 2TB 7200rpm mechanical drives (mirrored)</p>
</li>
</ul>
</div>
</li>
</ul>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_hardware_considerations">Hardware Considerations</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Our CPU and motherboard must support "virtualization‚Äù (SVM) and IOMMU, which needs to be enabled in firmware for resource sharing. Also, we should have 32GB of RAM or more, so that we can reserve at least 16GB for a single virtual machine (VM) and still have enough memory left over for ProxMox and potentially other VMs running simultaneously.</p>
</div>
<div class="paragraph">
<p>While most of our computer hardware can be shared between multiple VMs, the graphics card (GPU) cannot readily be shared. We&#8217;ll need at least two GPUs:</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>One GPU for ProxMox (the host);</p>
</li>
<li>
<p>One powerful GPU for our VMs (the guests: Windows, Linux, etc.).</p>
</li>
</ol>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_software_considerations">Software Considerations</h2>
<div class="sectionbody">
<div class="paragraph">
<p><a href="https://jannikjung.me/proxmox-ve-5-0-beta1/">PVE 5.0</a> is based in <a href="https://wiki.debian.org/DebianStretch">Debian Linux (Stretch)</a>. Since our Ryzen hardware is rather new, our host system needs to have a Linux kernel version 4.10 or later. Although in beta at the time of this writing, PVE 5.0 has better support for Ryzen than PVE 4.4.</p>
</div>
<div class="paragraph">
<p>PVE natively supports both <a href="https://www.linux-kvm.org/page/Main_Page">KVM virtual machines</a> for hardware virtualization and <a href="https://linuxcontainers.org/lxc/introduction/">LXC containers</a>. Since the guest systems can run under hardware virtualization, we get some added bonuses. For example, we can benefit from Ryzen hardware and still get <a href="http://www.pcworld.com/article/3189990/windows/microsoft-blocks-kaby-lake-and-ryzen-pcs-from-windows-7-81-updates.html">Windows 7 updates</a>. We would need to identify our Windows <a href="https://www.nextofwindows.com/the-best-way-to-uniquely-identify-a-windows-machine">Universally Unique Identifier (UUID)</a> so that it may be identical on our VM. Otherwise, Microsoft may think that we have a new version of Windows that needs to be registered.</p>
</div>
<div class="paragraph">
<p>We will use <a href="https://github.com/zfsonlinux/zfs/wiki/faq">ZFS</a>, a storage platform that encompasses the functionality of traditional filesystems, volume managers, and more, with consistent reliability, and performance. Our ZFS installation will be compressed and striped: our two SSD drives will run in parallel and require less storage space, which improves read/write performance. In addition, our ZFS will be mirrored: our SSD drives will be cloned so that we have a backup in case of drive failure.</p>
</div>
<table class="tableblock frame-all grid-all spread">
<colgroup>
<col style="width: 11.1111%;">
<col style="width: 88.8889%;">
</colgroup>
<tbody>
<tr>
<td class="tableblock halign-center valign-middle"><p class="tableblock"><span class="image"><img src="/images/icons/lightbulb.png" alt="lightbulb.png" width="56"></span></p></td>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><strong>About That</strong>: KVM supports multiple disk formats; raw images, the native QEMU format (qcow2), VMware format, and many more. When working with ZFS on PVE, we need to use raw images. It may not seem obvious at first, but we can easily convert an existing KVM file from one format to a raw image. Near the end of this guide, we&#8217;ll cover the process to convert a qcow2 format to the required PVE raw image.</p>
</div></div></td>
</tr>
</tbody>
</table>
</div>
</div>
<div class="sect1">
<h2 id="_next_steps">Next Steps&#8230;&#8203;</h2>
<div class="sectionbody">
<div class="paragraph">
<p>This is Part 1 of a multipart tutorial, and a work in progress. Roughly speaking the next parts are as follows. As I complete each part, I&#8217;ll update the links.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Part 2: Getting Started</p>
</li>
<li>
<p>Part 3: System Optimization</p>
</li>
</ul>
</div>
</div>
</div>]]></description><link>https://roobyz.github.io/2017/04/23/Server-Virtualization-Management.html</link><guid isPermaLink="true">https://roobyz.github.io/2017/04/23/Server-Virtualization-Management.html</guid><category><![CDATA[Blog]]></category><category><![CDATA[Open_Source]]></category><category><![CDATA[Technology]]></category><dc:creator><![CDATA[Roberto Rivera]]></dc:creator><pubDate>Sun, 23 Apr 2017 00:00:00 GMT</pubDate></item><item><title><![CDATA[Titanic: Learning Data Science with RStudio]]></title><description><![CDATA[<div id="preamble">
<div class="sectionbody">
<div class="paragraph">
<p>So we are aspiring data scientists and want to dip our toes into <a href="http://rmarkdown.rstudio.com/">RStudio</a>. How do we get started? We dive into the into the waters of the <a href="https://www.kaggle.com/c/titanic">Kaggle Titanic "Competition"</a>, of course!</p>
</div>
<div class="paragraph">
<p>Our objective:</p>
</div>
<div class="ulist">
<ul>
<li>
<p>learn how to think about the competition from a data science perspective</p>
</li>
<li>
<p>get somewhat comfortable with RStudio</p>
</li>
<li>
<p>predict whether or not a passenger would survive the sinking of the <a href="https://en.wikipedia.org/wiki/RMS_Titanic">RMS Titanic</a></p>
</li>
<li>
<p>enter a Kaggle submission file for evaluation</p>
</li>
<li>
<p>profit!</p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_kaggle_basics">Kaggle Basics</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Kaggle is a community of data scientists and a platform for facilitating data science journeys. One way to participate, is by entering data science competitions. Similar to other competitions, Kaggle provides two Titanic datasets containing passenger attributes:</p>
</div>
<div class="ulist">
<ul>
<li>
<p>a <em>training set</em>, complete with the outcome (target) variable for training our predictive model(s)</p>
</li>
<li>
<p>a <em>test set</em>, for predicting the unknown outcome variable based on the passenger attributes provided in both datasets.</p>
</li>
</ul>
</div>
<div class="paragraph">
<p>After training and validating our predictive model(s), we can then enter the submission file to Kaggle for evaluation. As we iterate, we can submit more files and assess our progress on the leaderboard. Subtle model improvements can lead to significant leaps on the leaderboard.</p>
</div>
<table class="tableblock frame-all grid-all spread">
<colgroup>
<col style="width: 11.1111%;">
<col style="width: 88.8889%;">
</colgroup>
<tbody>
<tr>
<td class="tableblock halign-center valign-middle"><p class="tableblock"><span class="image"><img src="/images/icons/lightbulb.png" alt="lightbulb.png" width="56"></span></p></td>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><strong>About That</strong>: Predictive models are trained using attributes (variables), right? How does that work?</p>
</div>
<div class="paragraph">
<p>Some attributes are correlated: as they vary, to some degree other attributes may also vary. Machine learning leverages that interdependence to model the predicted outcomes. For accurate model performance, we need to:</p>
</div>
<div class="ulist">
<ul>
<li>
<p>maximize the number of explanatory variables: those that are correlated with the outcome variable, and</p>
</li>
<li>
<p>minimize the correlation of explanatory variables to each other (<a href="https://en.wikipedia.org/wiki/Multicollinearity">multicollinearity</a>).</p>
</li>
</ul>
</div>
<div class="paragraph">
<p>In other words, we need to find the fewest quantity of variables that can explain almost everything that is going on with the outcome that we want to predict.</p>
</div></div></td>
</tr>
</tbody>
</table>
</div>
</div>
<div class="sect1">
<h2 id="_titanic_history_lesson">Titanic History Lesson</h2>
<div class="sectionbody">
<div class="paragraph">
<p>The Titanic was a British passenger liner that sank after colliding with an iceberg in the Atlantic on its maiden voyage en route to New York City. It was the largest ship of its time with 10 decks, 8 of which were for passengers.</p>
</div>
<div class="paragraph">
<p>There were 2,224 passengers and crew aboard. Of the 1,317 passengers, there were: 324 in First Class (including some of the wealthiest people of the time), 284 in Second Class, and 709 in Third Class. Of these, 869 (66%) were male and 447 (34%) female. There were 107 children aboard, the largest number of which were in Third Class.</p>
</div>
<div class="paragraph">
<p>The ship had enough lifeboats for about 1,100 people, and more than 1,500 died. Due to the "women and children first" protocol, men were disproportionately left aboard. Also, not all lifeboats were completely filled during the evacuation. The 705 surviving passengers were rescued by the RMS Carpathia around 2 hours after the catastrophe.</p>
</div>
<table class="tableblock frame-all grid-all spread">
<colgroup>
<col style="width: 11.1111%;">
<col style="width: 88.8889%;">
</colgroup>
<tbody>
<tr>
<td class="tableblock halign-center valign-middle"><p class="tableblock"><span class="image"><img src="/images/icons/lightbulb.png" alt="lightbulb.png" width="56"></span></p></td>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><strong>About That</strong>: So the different variables like gender and class could influence whether someone survived, correct?</p>
</div>
<div class="paragraph">
<p>Yes, for example, someone in a lower deck may not have been able to get to the lifeboats: which is correlated to class. To achieve reasonably accurate survival predictions, the model that we create will assign different weights to the variables of importance.</p>
</div></div></td>
</tr>
</tbody>
</table>
</div>
</div>
<div class="sect1">
<h2 id="_next_steps">Next Steps&#8230;&#8203;</h2>
<div class="sectionbody">
<div class="paragraph">
<p>We&#8217;ll approach this in multiple parts. This is still a work in progress, but roughly speaking it should look like:</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Part 1: Basic Setup</p>
</li>
<li>
<p>Part 2: Feature Engineering</p>
</li>
<li>
<p>Part 3: Prediction</p>
</li>
<li>
<p>Part 4: Conclusion</p>
</li>
</ul>
</div>
</div>
</div>]]></description><link>https://roobyz.github.io/2017/04/16/Predict-Survival-Propensity-of-Titanic-Passengers.html</link><guid isPermaLink="true">https://roobyz.github.io/2017/04/16/Predict-Survival-Propensity-of-Titanic-Passengers.html</guid><category><![CDATA[Blog]]></category><category><![CDATA[Open_Source]]></category><category><![CDATA[Machine_Learning]]></category><category><![CDATA[Analytics]]></category><category><![CDATA[Data_Science]]></category><dc:creator><![CDATA[Roberto Rivera]]></dc:creator><pubDate>Sun, 16 Apr 2017 00:00:00 GMT</pubDate></item><item><title><![CDATA[Qualitative Prediction of Weight-Lifting Exercises]]></title><description><![CDATA[<div class="paragraph">
<p>One day your company tells your team that they should switch from a proprietary analytics platform like <a href="https://www.sas.com/">SAS</a>, to something <a href="https://opensource.org/">open source</a> like <a href="http://rmarkdown.rstudio.com/">RStudio</a>. Undoubtedly some analysts may become fascinated, while others anxious. How would you get them excited about the switch?</p>
</div>
<div class="paragraph">
<p>My approach was to demonstrate the potential of the new open source platform. How easily could RStudio generate reproducible research and facilitate story telling with data? How could we weave together narrative text and code to seamlessly produce and deliver elegantly formatted analyses to multiple audiences?</p>
</div>
<div class="paragraph">
<p>Leveraging Human Activity Recognition (HAR) data provided from a <a href="http://groupware.les.inf.puc-rio.br/har#ixzz3de67BWZU">Groupware@LES</a> study, a machine learning use-case was born. HAR data has become ubiquitous with the advent of devices like the Fitbit, Nike FuelBand, and even smartphones. Although users of these devices tend to quantify how much they participate in an activity, they rarely consider how <em>well</em> they perform the activity.</p>
</div>
<div class="paragraph">
<p>The provided multiclass variable was generated by participants wearing HAR devices, and is relatively balanced (equally distributed). This simplifies the analysis somewhat since we don&#8217;t need to consider tactics to combat <a href="http://machinelearningmastery.com/tactics-to-combat-imbalanced-classes-in-your-machine-learning-dataset/">imbalanced classes</a>. In addition, this lets us focus primarily on the other major analytics steps required in most machine learning projects.</p>
</div>
<div class="paragraph">
<p>Machine learning project goals:</p>
</div>
<div class="ulist">
<ul>
<li>
<p>use the multiclass variable to build a predictor that distinguishes between participants that correctly completed fitness exercises versus those that hadn‚Äôt and what their mistakes may have been.</p>
</li>
<li>
<p>demonstrate the feasibility of using RStudio for delivering reproducible research via a webpage.</p>
</li>
</ul>
</div>
<div class="paragraph">
<p>The <a href="https://cdn.rawgit.com/roobyz/PredictiveML/c0297e0d771e39633436b3cff87707f0c5f4b851/ml_activity_success.html">project results</a>, and <a href="https://raw.githubusercontent.com/roobyz/PredictiveML/master/ml_activity_success.Rmd">code</a> are available on my <a href="https://github.com/roobyz/PredictiveML">GitHub Repository</a>.</p>
</div>]]></description><link>https://roobyz.github.io/2017/04/15/Identifying-the-Successful-Completion-of-Weight-Lifting-Exercises.html</link><guid isPermaLink="true">https://roobyz.github.io/2017/04/15/Identifying-the-Successful-Completion-of-Weight-Lifting-Exercises.html</guid><category><![CDATA[Blog]]></category><category><![CDATA[Open_Source]]></category><category><![CDATA[Machine_Learning]]></category><category><![CDATA[Analytics]]></category><category><![CDATA[Data_Science]]></category><dc:creator><![CDATA[Roberto Rivera]]></dc:creator><pubDate>Sat, 15 Apr 2017 00:00:00 GMT</pubDate></item></channel></rss>